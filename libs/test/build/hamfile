project
   : requirements =
      @<include>../include
      @<define>BOOST_TEST_NO_LIB
      (<link>shared -> <define>"BOOST_TEST_DYN_LINK=1")                                                                                                                              
      (<toolset>borland -> <cxxflags>"-w-8080")                                                                                                                                                                                  

      # Disable Warning about boost::noncopyable not being exported                                                                                                                                                       
      (<link>shared && <toolset>msvc -> <cxxflags>"-wd4275")                                                                                                                                                                        
      (<toolset>msvc -> <cxxflags>"-wd4671" <cxxflags>"-wd4673")                                                                                                                                                                                     
#     [ predef-check "BOOST_COMP_GNUC >= 4.3.0" : : <cxxflags>-Wno-variadic-macros ]                                                                                                                                      
      (<toolset>clang -> <cxxflags>"-Wno-c99-extensions" <cxxflags>"-Wno-variadic-macros")                                                                                                                                                                       
       <warnings>all                                                                                                                                                                                                       
#      <warnings-as-errors>on                                                                                                                                                                                            
                                                                                                                                                                                                                                       
     # adding a dependency on boost/timer as the header are needed, and the junction needs                                                                                                                               
     # to be there in order to build the library.                                                                                                                                                                        
      <source>(/boost/timer)                                                                                                                                                                                  
   : usage-requirements =                                                                                                                                                                                                              
      <define>"BOOST_TEST_NO_AUTO_LINK=1"                                                                                                                                                                                   
      # Disable Warning about boost::noncopyable not being exported                                                                                                                                                       
      (<link>shared && <toolset>msvc -> <cxxflags>"-wd4275")                                                                                                                                                                        
                                                                                                                                                                                                                                       
      # Adding a dependency on boost/timer as the headers need to be there in case of the                                                                                                                                 
      # header-only usage variant                                                                                                                                                                                         
      <use>(/boost/timer)                                                                                                                                                                                      
   ;
    
local
alias base_sources
   :
  ../src/compiler_log_formatter.cpp
  ../src/debug.cpp
  ../src/exception_safety.cpp
  ../src/execution_monitor.cpp
  ../src/framework.cpp
  ../src/interaction_based.cpp
  ../src/logged_expectations.cpp
  ../src/plain_report_formatter.cpp
  ../src/progress_monitor.cpp
  ../src/results_collector.cpp
  ../src/results_reporter.cpp
  ../src/test_tools.cpp
  ../src/unit_test_log.cpp
  ../src/unit_test_main.cpp
  ../src/unit_test_monitor.cpp
  ../src/unit_test_parameters.cpp
  ../src/unit_test_suite.cpp
  ../src/xml_log_formatter.cpp
  ../src/xml_report_formatter.cpp
   ;

local
alias dependencies 
   :
     @/boost/bind
     @/boost/config
     @/boost/core
     @/boost/detail
     @/boost/exception
     @/boost/io
     @/boost/iterator
     @/boost/lexical_cast
     @/boost/mpl
     @/boost/numeric/conversion
     @/boost/optional
     @/boost/preprocessor
     @/boost/smart_ptr
     @/boost/static_assert
     @/boost/timer
     @/boost/type_traits
     @/boost/utility
   ;

local
lib boost.test.utf
   : sources =
      ../src/compiler_log_formatter.cpp
      ../src/debug.cpp
      ../src/decorator.cpp
      ../src/execution_monitor.cpp
      ../src/framework.cpp
      ../src/plain_report_formatter.cpp
      ../src/progress_monitor.cpp
      ../src/results_collector.cpp
      ../src/results_reporter.cpp
      ../src/test_framework_init_observer.cpp
      ../src/test_tools.cpp
      ../src/test_tree.cpp
      ../src/unit_test_log.cpp
      ../src/unit_test_main.cpp
      ../src/unit_test_monitor.cpp
      ../src/unit_test_parameters.cpp
      ../src/junit_log_formatter.cpp
      ../src/xml_log_formatter.cpp
      ../src/xml_report_formatter.cpp
      dependencies
  ;

local
header-lib boost.test.minimal 
   :
    /boost/smart_ptr
   ;

local
lib boost.test.execution_monitor 
   :
    base_sources
    ../src/test_main.cpp
    dependencies
   :
    <link>static
   ;

explicit alias minimal : boost.test.minimal ;
explicit alias utf : boost.test.utf ;
explicit alias execution_monitor : boost.test.execution_monitor ;
